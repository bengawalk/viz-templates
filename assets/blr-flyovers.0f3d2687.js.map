{"version":3,"file":"blr-flyovers.0f3d2687.js","sources":["../../src/blr-flyovers/main.jsx"],"sourcesContent":["import * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport _ from \"lodash\";\nimport mapboxgl from \"mapbox-gl\";\nimport '@material-design-icons/font/filled.css';\n\nimport { MAPBOX_TOKEN } from \"../utils/constants\";\n\nimport flyoverData from \"./data.json\";\n\nconst TIMELINE_DATA = {\n  \"Agara Flyover\": 2010,\n  \"Ananda Rao Flyover\": 2006,\n  \"BDA Junction Flyover\": 2008,\n  \"BGS Flyover\": 1998,\n  \"Basaveshwaranagar Flyover\": 2023,\n  \"Bellandur Flyover\": 2012,\n  \"Bhadrappa Layout Flyover\": 2014,\n  \"Dairy Circle Flyover\": 2004,\n  \"Delmia Circle Flyover\": 2018,\n  \"Devarabeesanahalli Flyover\": 2013,\n  \"Doddanekundi Flyover\": 2018,\n  \"Domlur Flyover\": 2006,\n  \"Ganga Nagar Flyover\": 0,                         // TODO\n  \"HSR Layout 14th Main Flyover\": 2012,\n  \"Hebbal Flyover\": 2003,\n  \"Hennur Flyover\": 2018,\n  \"Ibblur Flyover\": 2010,\n  \"KEB Junction Flyover\": 2017,\n  \"Kalyan Nagar Flyover\": 2012,\n  \"Kanteerava Studio Flyover\": 2015,\n  \"Kengeri Flyover\": 0,                         // TODO\n  \"Kittur Rani Chenamma Circle Flyover\": 2017,\n  \"Lingarajapuram Flyover\": 2004,\n  \"Mahadevapura Flyover\": 0,                         // TODO\n  \"Manjunath Nagar Flyover\": 2018,\n  \"Mother Dairy Circle Flyover\": 2020,\n  \"Nagawara Flyover\": 2014,\n  \"Nayandahalli Flyover\": 2012,\n  \"Rajajinagar 1st Block Flyover\": 2016,\n  \"Rashtrotthana Junction Flyover\": 2021,\n  \"Richmond Circle Flyover\": 0,                         // TODO\n  \"Shivanagar Flyover\": 2021,\n  \"Silk Board Flyover\": 0,                         // TODO\n  \"Sumanahalli Flyover\": 2010,\n  \"Tin Factory Flyover\": 2002,\n  \"Vanivilas Flyover\": 2005,\n  \"Wheeler Road Flyover\": 2013,\n  \"Yeshwantpura Circle Flyover\": 2009\n}\n\n// console.log(_.sortBy(_.uniq(_.map(flyoverData.features, f => f.properties[\"@relations\"][0].reltags?.name))));\n\nconst getCompletedFlyoversGeojson = (year) => {\n  return {\n    ...flyoverData,\n    // features: _.filter(flyoverData.features, f => TIMELINE_DATA[f.properties[\"@relations\"][0].reltags?.name] <= year)\n  };\n};\n\nmapboxgl.accessToken = MAPBOX_TOKEN;\n\nclass Container extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      autoplay: false,\n      inputYear: 2023,\n      lat: \"12.9737\",\n      lng: \"77.6081\",\n      zoom : \"10.39\",\n    };\n    this.mapContainer = React.createRef();\n    this.autoplayInterval = null;\n  }\n\n  componentDidMount() {\n    this.initMap();\n    this.map?.on(\"load\", () => {\n      this.renderMapData();\n      this.addMapEvents();\n    });\n  }\n\n  initMap = () => {\n    const { lng, lat, zoom } = this.state;\n    const map = new mapboxgl.Map({\n      container: this.mapContainer.current,\n      style: \"mapbox://styles/mapbox/streets-v12\",\n      center: [lng, lat],\n      zoom: zoom,\n      minZoom: 10,\n      maxZoom: 18,\n    });\n    map.dragRotate.disable();\n    map.touchZoomRotate.disableRotation();\n    this.map = map;\n  };\n\n  renderMapData = () => {\n    this.map.addSource(\"flyovers\", {\n      type: \"geojson\",\n      data: getCompletedFlyoversGeojson(2023),\n    });\n    this.map.addLayer({\n      id: \"flyovers\",\n      source: \"flyovers\",\n      type: \"line\",\n      layout: {\n        \"line-join\": \"round\",\n        \"line-cap\": \"round\",\n      },\n      paint: {\n        \"line-color\": \"red\",\n        \"line-width\": 3,\n      },\n    });\n  }\n\n  toggleAutoplay = () => {\n    const { autoplay } = this.state;\n    if(autoplay) {\n      clearInterval(this.autoplayInterval);\n      this.autoplayInterval = null;\n    } else {\n\n      this.autoplayInterval = setInterval(() => {\n        this.setState(({ inputYear }) => ({ inputYear: inputYear === 2023 ? 1998 : inputYear + 1 }))\n      }, 300);\n    }\n    this.setState({\n      autoplay: !autoplay,\n    });\n  }\n\n  addMapEvents = () => {\n    this.map.on(\"move\", () => {\n      this.setState({\n        lng: this.map.getCenter().lng.toFixed(4),\n        lat: this.map.getCenter().lat.toFixed(4),\n        zoom: this.map.getZoom().toFixed(2),\n      });\n    });\n  }\n\n  componentDidUpdate() {\n    const { inputYear } = this.state;\n\n    const flyoversSource = this.map.getSource(\"flyovers\");\n    flyoversSource.setData(getCompletedFlyoversGeojson(inputYear));\n  }\n\n  render() {\n    // const { autoplay, inputYear } = this.state;\n    return (\n      <div id=\"flyover-viz-wrapper\">\n        <div id=\"flyover-viz-map\" ref={this.mapContainer} />\n        <a href=\"https://en.wikipedia.org/wiki/List_of_flyovers_and_under-passes_in_Bengaluru\" target=\"_blank\" className=\"wiki-link\">\n          Read more here\n        </a>\n        {/*<div className=\"timeline-wrapper\">*/}\n        {/*  <button className=\"timeline-play-toggle\" onClick={this.toggleAutoplay}>*/}\n        {/*    <span className=\"material-icons\">*/}\n        {/*      {autoplay ? \"pause\" : \"play_arrow\"}*/}\n        {/*    </span>*/}\n        {/*  </button>*/}\n        {/*  <input*/}\n        {/*    type=\"range\"*/}\n        {/*    min={1998}*/}\n        {/*    max={2023}*/}\n        {/*    value={inputYear}*/}\n        {/*    onChange={e => {*/}\n        {/*      this.setState({ inputYear: _.toNumber(e.target.value) })*/}\n        {/*      if(autoplay) {*/}\n        {/*        this.toggleAutoplay();*/}\n        {/*      }*/}\n        {/*    }}*/}\n        {/*    className=\"timeline-slider\"*/}\n        {/*  />*/}\n        {/*  <div className=\"timeline-label\">*/}\n        {/*    { inputYear }*/}\n        {/*  </div>*/}\n        {/*</div>*/}\n      </div>\n    );\n  }\n}\n\nconst root = createRoot(document.getElementById(\"root\"));\nroot.render(<Container />);\n"],"names":["getCompletedFlyoversGeojson","year","flyoverData","mapboxgl","MAPBOX_TOKEN","Container","React.Component","props","__publicField","lng","lat","zoom","map","autoplay","inputYear","React.createRef","_a","React.createElement","root","createRoot"],"mappings":"immKAqDMA,EAA+BC,IAC5B,CACL,GAAGC,CAAA,GAKPC,EAAS,YAAcC,EAEvB,MAAMC,UAAkBC,EAAAA,QAAAA,SAAgB,CACtC,YAAYC,EAAO,CACjB,MAAMA,CAAK,EAoBbC,EAAA,eAAU,IAAM,CACd,KAAM,CAAE,IAAAC,EAAK,IAAAC,EAAK,KAAAC,CAAA,EAAS,KAAK,MAC1BC,EAAM,IAAIT,EAAS,IAAI,CAC3B,UAAW,KAAK,aAAa,QAC7B,MAAO,qCACP,OAAQ,CAACM,EAAKC,CAAG,EACjB,KAAAC,EACA,QAAS,GACT,QAAS,EAAA,CACV,EACDC,EAAI,WAAW,UACfA,EAAI,gBAAgB,kBACpB,KAAK,IAAMA,CAAA,GAGbJ,EAAA,qBAAgB,IAAM,CACf,KAAA,IAAI,UAAU,WAAY,CAC7B,KAAM,UACN,KAAMR,EAAgC,CAAA,CACvC,EACD,KAAK,IAAI,SAAS,CAChB,GAAI,WACJ,OAAQ,WACR,KAAM,OACN,OAAQ,CACN,YAAa,QACb,WAAY,OACd,EACA,MAAO,CACL,aAAc,MACd,aAAc,CAChB,CAAA,CACD,CAAA,GAGHQ,EAAA,sBAAiB,IAAM,CACf,KAAA,CAAE,SAAAK,CAAS,EAAI,KAAK,MACvBA,GACD,cAAc,KAAK,gBAAgB,EACnC,KAAK,iBAAmB,MAGnB,KAAA,iBAAmB,YAAY,IAAM,CACxC,KAAK,SAAS,CAAC,CAAE,UAAAC,CAAA,KAAiB,CAAE,UAAWA,IAAc,KAAO,KAAOA,EAAY,CAAA,EAAI,GAC1F,GAAG,EAER,KAAK,SAAS,CACZ,SAAU,CAACD,CAAA,CACZ,CAAA,GAGHL,EAAA,oBAAe,IAAM,CACd,KAAA,IAAI,GAAG,OAAQ,IAAM,CACxB,KAAK,SAAS,CACZ,IAAK,KAAK,IAAI,UAAY,EAAA,IAAI,QAAQ,CAAC,EACvC,IAAK,KAAK,IAAI,UAAY,EAAA,IAAI,QAAQ,CAAC,EACvC,KAAM,KAAK,IAAI,QAAQ,EAAE,QAAQ,CAAC,CAAA,CACnC,CAAA,CACF,CAAA,GA7ED,KAAK,MAAQ,CACX,SAAU,GACV,UAAW,KACX,IAAK,UACL,IAAK,UACL,KAAO,OAAA,EAEJ,KAAA,aAAeO,EAAAA,QAAAA,YACpB,KAAK,iBAAmB,IAC1B,CAEA,mBAAoB,OAClB,KAAK,QAAQ,GACRC,EAAA,KAAA,MAAA,MAAAA,EAAK,GAAG,OAAQ,IAAM,CACzB,KAAK,cAAc,EACnB,KAAK,aAAa,CAAA,EAEtB,CA+DA,oBAAqB,CACG,KAAK,MAEJ,KAAK,IAAI,UAAU,UAAU,EACrC,QAAQhB,EAAqC,CAAC,CAC/D,CAEA,QAAS,CAGL,OAAAiB,wBAAC,OAAI,GAAG,qBAAA,0BACL,MAAI,CAAA,GAAG,kBAAkB,IAAK,KAAK,YAAc,CAAA,EAClDA,EAAA,QAAA,cAAC,KAAE,KAAK,+EAA+E,OAAO,SAAS,UAAU,aAAY,gBAE7H,CAwBF,CAEJ,CACF,CAEA,MAAMC,EAAOC,EAAW,SAAS,eAAe,MAAM,CAAC,EACvDD,EAAK,OAAQD,EAAAA,QAAAA,cAAAZ,EAAA,IAAU,CAAE"}